Project: Postman to Pytest Converter

Description:
A tool to convert Postman collections to Pytest test cases.

Requirements:
1. Input:
   - Read and parse Postman collection files (JSON format)
   - Read and parse YAML dependency graph files
   - Input files: 
     * mgp-sample.json (Postman collection)
     * mgp-sample.yml (Dependency graph configuration)

2. Dependency Graph:
   - Parse dependency relationships between tests from YAML
   - Use dependency information to order test generation
   - Support test dependencies and execution flow

3. Output:
   - Generate Pytest test files
   - Output directory: example/generated_tests
   - Tests should maintain Postman collection structure and behavior

4. Core Features:
   - Convert Postman requests to Pytest test functions
   - Handle request methods (GET, POST, PUT, DELETE, etc.)
   - Process request headers, body, and parameters
   - Support environment variables and test scripts
   - Generate assertions based on Postman tests

5. Project Structure:
   /tools/postman_to_pytest/
   ├── project_requirements.txt
   ├── mgp-sample.json         (Input Postman collection)
   ├── mgp-sample.yml         (Input configuration)
   └── example/
       └── generated_tests/   (Output directory for generated tests)

6. Technical Requirements:
   - Python-based implementation
   - Use pytest framework
   - Handle JSON and YAML parsing
   - Generate valid Python test files
   - Maintain code quality and testing standards

7. Dependencies:
   - pytest
   - pyyaml (for YAML parsing)
   - json (built-in, for JSON parsing)

Status: Awaiting implementation
