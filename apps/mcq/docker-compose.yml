version: '3.8'

services:
  # Frontend React app
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-development}
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - EMAIL=${EMAIL:-admin@example.com}
      - USE_SSL=${USE_SSL:-false}
      - CERTBOT_STAGING=${CERTBOT_STAGING:-true}
    volumes:
      - ./ssl:/etc/letsencrypt:ro
    depends_on:
      - api
    networks:
      - mcq-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  # API server
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mcq
    volumes:
      - ./public/questions:/app/public/questions
    depends_on:
      - db
    networks:
      - mcq-network
    restart: unless-stopped

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mcq
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - mcq-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  mcq-network:
    driver: bridge
